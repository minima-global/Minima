/*
 DETAILS 
 
 0 - ROUND
 
 1 - PLAYER PUBKEY
 2 - PLAYER PAYOUT
 3 - PLAYER RANDOM HASH
 4 - PLAYER BETS - number of different individual bets from state 10 onwards
 5 - MAX POSSIBLE WINNINGS what needs to be added (This is checked by the House off chain)
 
 6 - HOUSE PUBKEY
 7 - HOUSE PAYOUT
 8 - HOUSE RANDOM HASH (no preimage required)
 
 9 - PLAYER PREIMAGE
 
 20 PLAYERBET1
 21 PLAYERNUM1
 22 ..
 23 ..
 
 
*/

/* VERSION  - change this to change the final address*/
LET version = 0.1

LET round = STATE(0)
/* ASSERT round EQ INC(PREVSTATE(0)) */

LET dat = 0xFFEEDD
LET str = [My tester]
LET nn = 0.3434

LET conc = STRING(dat) + STRING(str) + STRING(nn)

LET tester = SHA3(conc)


RETURN TRUE

/* isOdd function */
LET isodd = [
    LET input = $1
    LET returnvalue = FLOOR(input/2) NEQ (input/2)
]

/* isEven function */
LET iseven = [ 
    LET returnvalue = NOT FUNCTION(isodd $1)
]

/* Given a random HASH return a number from 0-36 */
LET roulette = [
    LET randomhash = $1
    
    /* Create a random number within MiniNumber Limits */
    LET randomnumber = NUMBER(SUBSET(0 8 randomhash))
    
    /* What to modulo */
    LET modulo = 37
    
    LET returnvalue = randomnumber - ( FLOOR(randomnumber / modulo) * modulo ) 
]

/* 
    Check winning given a ROULETTE ROLL THE BET and CHOSEN NUMBER
    
    CHOSEN NUMBER CAN BE 
    1-36   Is a normal number
    37     Is RED
    38     Is BLACK
    39     EVEN
    40     ODD 
     
    On a roulette wheel..   
    The odd numbers in the ranges 1–10 and 19–28 are red while the even numbers in those ranges are black.
    The odd numbers in the ranges 11–18 and 29–36 are black while the even numbers in those ranges are red.
*/

LET checker = [ 
    LET introll = $1
    LET intnum  = $2
    LET intbet  = $3
    
    /* What are the winnings */
    LET intwin = 0
    
    /* Its a normal bet on a single number */
    IF intnum GTE 1 AND intnum LTE 36 THEN
        IF introll EQ intnum THEN
            LET intwin = intbet * 36
        ENDIF
    
    /* Check for RED */
    ELSEIF intnum EQ 37 THEN
        IF FUNCTION( isodd introll ) THEN
            IF ( introll GTE 1 AND introll LT 10 ) OR ( introll GTE 19 AND introll LT 28 ) THEN
                /* ITS RED*/
                LET intwin = intbet * 2
            ENDIF
        ELSE
            IF ( introll GT 11 AND introll LT 19 ) OR ( introll GTE 29 AND introll LTE 36 ) THEN
                /* ITS RED*/
                LET intwin = intbet * 2
            ENDIF
        ENDIF
    
    /* Check for BLACK */
    ELSEIF intnum EQ 38 THEN
        IF FUNCTION( isodd introll ) THEN
            IF ( introll GTE 11 AND introll LT 18 ) OR ( introll GTE 29 AND introll LT 36 ) THEN
                /* ITS BLACK */
                LET intwin = intbet * 2
            ENDIF
        ELSE
            IF ( introll GT 1 AND introll LTE 11 ) OR ( introll GTE 19 AND introll LTE 28 ) THEN
                /* ITS BLACK */
                LET intwin = intbet * 2
            ENDIF
        ENDIF
    
    /* Check for EVEN */
    ELSEIF intnum EQ 39 THEN
        IF FUNCTION( iseven introll ) THEN
            LET intwin = intbet * 2
        ENDIF
        
    /* Check for ODD */
    ELSEIF intnum EQ 39 THEN
        IF FUNCTION( isodd introll ) THEN
            LET intwin = intbet * 2
        ENDIF
        
    ENDIF
    
    LET returnvalue = intwin
]

/*
LET somerandom = SHA3(0xFFEEDDDEAD)
LET roll = FUNCTION (roulette somerandom )
LET num = 37
LET bet = 1
LET count = 1
WHILE count LT 10 DO
    LET winnings = FUNCTION( checker count num bet )
    LET count = INC(count)
ENDWHILE
LET winningsmanual = FUNCTION( checker 13 38 1 )
*/

LET playerpubkey = PREVSTATE(1)
LET housepubkey = PREVSTATE(6)
LET maxwinnings = PREVSTATE(5)

/* Player starts game on Round 0  - Now is the HOUSE turn*/
IF round EQ 1 THEN 

    /* HOUSE has 20 blocks to proceed - or player can cancel */
    IF @COINAGE GT 20 AND SIGNEDBY(playerpubkey) THEN RETURN TRUE ENDIF 

    /* Check Signed by house */
    ASSERT SIGNEDBY(housepubkey)

    /* Make sure all the details are kept */
    ASSERT SAMESTATE (1 7)

    /* Check The Random HASH chosen by the House exists */
    LET houserand = STATE(8)

    /* Now check all the correct outputs are present */
    RETURN VERIFYOUT ( @INPUT @ADDRESS maxwinnings @TOKENID TRUE )

/* PLAYER 1 reveals his preimage and PLAYS */
ELSEIF round EQ 2 THEN 

    /* Player has 20 blocks to claim - or Lotto can claim it all */
    IF @COINAGE GT 20 AND SIGNEDBY(housepubkey) THEN RETURN TRUE ENDIF 

    /* Check Signed by Player */
    ASSERT SIGNEDBY(playerpubkey)

    /* Check the provided preimage is correct */
    LET preimage  = STATE(9)
    LET checkhash = SHA3(preimage)
    ASSERT checkhash EQ secret

    /* The Random HASH chosen by the LOTTO runner */
    LET lottorand = PREVSTATE(8)
    
    /* NOW hash the 2 value */
    LET truerandom = SHA3(CONCAT(preimage lottorand))

    /* Calculate the number value of the first 8 bytes */
    LET hexsubset = SUBSET(0 8 decider)
    LET numvalue = NUMBER(hexsubset)
    LET maxvalue = NUMBER(0xFFFFFFFFFFFFFFFF)
    LET target = FLOOR(maxvalue * odds)

    /* Check if a winner */
    LET iswin = numvalue LTE target
    IF iswin THEN 

        /* Player gets the money */ 
        RETURN TRUE
    ELSE
         
        /* Send to Lotto address */
        RETURN VERIFYOUT ( @INPUT lottoaddress @AMOUNT @TOKENID TRUE )
    ENDIF
ENDIF

